#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    HRMR: HRMR {
        compatible = "zmk,behavior-hold-tap";
        label = "HRMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 52 19 58 6 45 32 63 62 61 60 59>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
    };

    HRML: HRML {
        compatible = "zmk,behavior-hold-tap";
        label = "HRML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
        hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 32 33 34 35 36 37 38 45 46 47 48 49 50 51 52 57 58 59 60 61 62 63 56 55 54 53>;
    };

    HRMRmouse: HRMRmouse {
        compatible = "zmk,behavior-hold-tap";
        label = "HRMRMOUSE";
        bindings = <&kp>, <&mkp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 52 19 58 6 45 32 63 62 61 60 59>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
    };

    HRMRoutput: HRMRoutput {
        compatible = "zmk,behavior-hold-tap";
        label = "HRMROUTPUT";
        bindings = <&kp>, <&out>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 52 19 58 6 45 32 63 62 61 60 59>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
    };

    HRMLlay: HRMLlay {
        compatible = "zmk,behavior-hold-tap";
        label = "HRMLLAY";
        bindings = <&to>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 52 19 58 6 45 32 63 62 61 60 59>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
    };

    HRMRLayTOG: HRMRLayTOG {
        compatible = "zmk,behavior-hold-tap";
        label = "HRMRLAYTOG";
        bindings = <&tog>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
        hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 32 33 34 35 36 37 38 45 46 47 48 49 50 51 52 57 58 59 60 61 62 63 56 55 54 53>;
    };

    HRMLRGB: HRMLRGB {
        compatible = "zmk,behavior-hold-tap";
        label = "HRMLRGB";
        bindings = <&kp>, <&rgb_ug>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
        hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 32 33 34 35 36 37 38 45 46 47 48 49 50 51 52 57 58 59 60 61 62 63 56 55 54 53>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        togaming {
            bindings = <&tog 4>;
            key-positions = <53 56>;
            layers = <0>;
            require-prior-idle-ms = <100>;
        };

        todefault {
            bindings = <&tog 0>;
            key-positions = <53 56>;
            layers = <4>;
            require-prior-idle-ms = <100>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <17 16>;
            require-prior-idle-ms = <100>;
            layers = <0 2 1 3>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <21 22>;
            require-prior-idle-ms = <100>;
            layers = <0 1 2 3>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <22 23>;
            require-prior-idle-ms = <100>;
            layers = <0 1 2 3>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <35 34>;
            require-prior-idle-ms = <100>;
            layers = <0 2 1 3>;
        };

        layer1 {
            bindings = <&to 2>;
            key-positions = <55 56>;
            layers = <0 1 2 3>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mt GRAVE ESC  &kp N1        &kp N2        &kp N3              &kp N4         &kp N5                      &kp UP_ARROW     &kp N6                         &kp N7          &kp N8           &kp N9        &kp N0              &kp BACKSPACE
&kp TAB        &kp Q         &kp W         &kp E               &kp R          &HRML LA(LS(LCTRL)) T       &kp DOWN_ARROW   &HRMR RA(RS(RCTRL)) Y          &kp U           &kp I            &kp O         &kp P               &kp BSLH
&kp CAPSLOCK   &HRML LGUI A  &HRML LALT S  &HRML LCTRL D       &HRML LSHFT F  &HRML LC(LA(LS(LGUI))) G    &kp LEFT_ARROW   &HRMR RC(RA(RS(RIGHT_GUI))) H  &HRMR RSHIFT J  &HRMR RCTRL K    &HRMR RALT L  &HRMR RGUI SEMI     &kp APOS
&kp LSHIFT     &HRMLlay 3 Z  &kp X         &kp C               &kp V          &HRML CAPSLOCK B            &kp RIGHT_ARROW  &HRMR CAPSLOCK N               &kp M           &kp COMMA        &kp DOT       &HRMRLayTOG 4 FSLH  &kp ENTER
&kp C_MUTE     &kp LCTRL     &kp LEFT_ALT  &mt LEFT_SHIFT TAB  &lt 1 SPACE    &none                       &none            &none                          &lt 1 SPACE     &lt 2 BACKSPACE  &kp RGUI      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans  &trans          &trans             &trans          &trans               &trans                              &trans  &trans                          &trans                  &trans                 &trans                &trans             &trans
&trans  &kp GRAVE       &kp N7             &kp N8          &kp N9               &HRML LA(LS(LCTRL)) APOS            &trans  &HRMR RA(RS(RCTRL)) BSLH        &mmv MOVE_LEFT          &mmv MOVE_DOWN         &mmv MOVE_UP          &mmv MOVE_RIGHT    &trans
&trans  &HRML LGUI DOT  &HRML LEFT_ALT N4  &HRML LCTRL N5  &HRML LEFT_SHIFT N6  &HRML LC(LA(LS(LEFT_GUI))) EQUAL    &trans  &HRMR RC(RA(RS(RGUI))) PAGE_UP  &HRMRmouse RSHIFT LCLK  &HRMRmouse RCTRL RCLK  &HRMRmouse RALT MCLK  &HRMR RGUI DELETE  &trans
&trans  &kp N0          &kp N1             &kp N2          &kp N3               &HRML CAPSLOCK MINUS                &trans  &HRMR CAPSLOCK PAGE_DOWN        &msc SCRL_LEFT          &msc SCRL_DOWN         &msc SCRL_UP          &msc SCRL_RIGHT    &trans
&trans  &trans          &trans             &trans          &trans               &trans                              &trans  &trans                          &trans                  &trans                 &trans                &trans
            >;
        };

        layer_2funmedia {
            bindings = <
&trans  &trans          &trans         &trans          &trans           &trans                                      &trans  &trans                               &trans               &trans                     &trans                  &trans             &trans
&trans  &kp F12         &kp F7         &kp F8          &kp F9           &HRML LA(LS(LCTRL)) LEFT_BRACKET            &trans  &HRMR RA(RS(RCTRL)) HOME             &kp LEFT_ARROW       &kp DOWN_ARROW             &kp UP_ARROW            &kp RIGHT_ARROW    &trans
&trans  &HRML LGUI F11  &HRML LALT F4  &HRML LCTRL F5  &HRML LSHIFT F6  &HRML LC(LA(LS(LEFT_GUI))) RIGHT_BRACKET    &trans  &HRMR RC(RA(RS(RGUI))) C_PLAY_PAUSE  &HRMR RSHIFT C_PREV  &HRMR RCTRL C_VOLUME_DOWN  &HRMR RALT C_VOLUME_UP  &HRMR RGUI C_NEXT  &trans
&trans  &kp F10         &kp F1         &kp F2          &kp F3           &HRML CAPSLOCK PRINTSCREEN                  &trans  &HRMRoutput CAPSLOCK OUT_TOG         &bt BT_SEL 0         &bt BT_SEL 1               &bt BT_SEL 2            &bt BT_SEL 3       &bt BT_SEL 4
&trans  &trans          &trans         &trans          &trans           &trans                                      &trans  &trans                               &trans               &trans                     &trans                  &trans
            >;
        };

        layer_4OSbuttons+arrows {
            bindings = <
&trans  &trans                     &trans                 &trans                  &trans                   &trans                               &trans  &trans         &trans           &trans     &trans        &trans           &trans
&trans  &ext_power EP_TOG          &soft_off              &trans                  &trans                   &HRMLRGB LA(LS(LCTRL)) RGB_BRD       &trans  &kp KP_DIVIDE  &kp KP_N7        &kp KP_N8  &kp KP_N9     &kp KP_ASTERISK  &soft_off
&trans  &HRMLRGB LEFT_GUI RGB_TOG  &HRMLRGB LALT RGB_EFF  &HRMLRGB LCTRL RGB_HUI  &HRMLRGB LSHIFT RGB_BRI  &HRML LC(LA(LS(LGUI))) KP_NUMLOCK    &trans  &kp KP_DOT     &kp KP_NUMBER_4  &kp KP_N5  &kp KP_N6     &kp KP_PLUS      &sys_reset
&trans  &trans                     &bootloader            &sys_reset              &bt BT_CLR               &HRML CAPSLOCK C_AC_REDO             &trans  &kp KP_N0      &kp KP_N1        &kp KP_N2  &kp KP_N3     &kp KP_MINUS     &kp KP_ENTER
&trans  &trans                     &trans                 &trans                  &trans                   &trans                               &trans  &trans         &trans           &trans     &kp KP_EQUAL  &trans
            >;
        };

        layer_5-Gaming0 {
            display-name = "LAYER5";
            bindings = <
&mt GRAVE ESC  &kp N1     &kp N2        &kp N3              &kp N4       &kp N5    &kp UP_ARROW     &kp N6  &kp N7       &kp N8           &kp N9         &kp N0              &kp BACKSPACE
&kp TAB        &kp Q      &kp W         &kp E               &kp R        &kp T     &kp DOWN_ARROW   &kp Y   &kp U        &kp I            &kp O          &kp P               &kp BSLH
&kp CAPS       &kp A      &kp S         &kp D               &kp F        &kp G     &kp LEFT_ARROW   &kp H   &kp J        &kp K            &kp L          &kp SEMI            &kp APOS
&kp LSHFT      &kp Z      &kp X         &kp C               &kp V        &kp B     &kp RIGHT_ARROW  &kp N   &kp M        &kp COMMA        &kp DOT        &HRMRLayTOG 0 FSLH  &kp ENTER
&kp C_MUTE     &kp LCTRL  &kp LEFT_ALT  &mt LEFT_SHIFT TAB  &lt 5 SPACE  &none     &none            &none   &lt 5 SPACE  &lt 6 BACKSPACE  &kp RIGHT_GUI  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_6Gaming1 {
            bindings = <
&trans  &trans     &trans  &trans  &trans  &trans       &trans  &trans         &trans          &trans          &trans        &trans           &trans
&trans  &kp GRAVE  &kp N7  &kp N8  &kp N9  &kp APOS     &trans  &kp BSLH       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &kp DOT    &kp N4  &kp N5  &kp N6  &kp EQUAL    &trans  &kp PAGE_UP    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
&trans  &kp N0     &kp N1  &kp N2  &kp N3  &kp MINUS    &trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans     &trans  &trans  &trans  &trans       &trans  &trans         &mkp LCLK       &mkp RCLK       &mkp MCLK     &trans
            >;
        };

        layer_7Gaming2 {
            bindings = <
&trans       &trans   &trans  &trans  &trans  &soft_off            &trans  &soft_off          &rgb_ug RGB_SPI   &rgb_ug RGB_SAI    &rgb_ug RGB_COLOR_HSB(114,100,50)  &bt BT_CLR                      &bt BT_CLR_ALL
&bootloader  &kp F12  &kp F7  &kp F8  &kp F9  &kp LEFT_BRACKET     &trans  &rgb_ug RGB_TOG    &rgb_ug RGB_EFF   &rgb_ug RGB_HUI    &rgb_ug RGB_BRI                    &rgb_ug RGB_COLOR_HSB(0,89,49)  &rgb_ug RGB_COLOR_HSB(217,91,52)
&sys_reset   &kp F11  &kp F4  &kp F5  &kp F6  &kp RIGHT_BRACKET    &trans  &ext_power EP_TOG  &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                    &kp C_NEXT                      &sys_reset
&trans       &kp F10  &kp F1  &kp F2  &kp F3  &kp PRINTSCREEN      &trans  &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2                       &bt BT_SEL 3                    &bt BT_SEL 4
&trans       &trans   &trans  &trans  &trans  &kp C_PP             &trans  &trans             &kp C_PLAY_PAUSE  &trans             &kp C_STOP                         &trans
            >;
        };

        layer_8Gaming3 {
            bindings = <
&trans  &trans                 &trans           &trans        &trans                &trans               &trans  &trans     &trans  &trans  &trans  &trans     &trans
&trans  &kp TILDE              &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES    &trans  &kp GRAVE  &kp N7  &kp N8  &kp N9  &kp APOS   &trans
&trans  &kp GREATER_THAN       &kp CARET        &kp PERCENT   &kp DOLLAR            &kp PLUS             &trans  &kp DOT    &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans
&trans  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp UNDERSCORE       &trans  &kp N0     &kp N1  &kp N2  &kp N3  &kp MINUS  &trans
&trans  &trans                 &trans           &trans        &trans                &trans               &trans  &trans     &trans  &trans  &trans  &trans
            >;
        };

        layer_9Gaming4 {
            bindings = <
&trans  &trans            &trans             &trans         &trans          &trans            &trans  &kp KP_NUMLOCK  &trans           &trans     &trans        &trans           &trans
&trans  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp CAPS       &key_repeat     &caps_word        &trans  &kp KP_DIVIDE   &kp KP_N7        &kp KP_N8  &kp KP_N9     &kp KP_ASTERISK  &trans
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans         &trans          &kp KP_NUMLOCK    &trans  &kp KP_DOT      &kp KP_NUMBER_4  &kp KP_N5  &kp KP_N6     &kp KP_PLUS      &trans
&trans  &kp C_AC_UNDO     &kp C_AC_CUT       &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_REDO     &trans  &kp KP_N0       &kp KP_N1        &kp KP_N2  &kp KP_N3     &kp KP_MINUS     &trans
&trans  &trans            &trans             &trans         &trans          &trans            &trans  &trans          &trans           &trans     &kp KP_EQUAL  &trans
            >;
        };

        OGsolfle-layer-0 {
            display-name = "LAYER0";
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 10  &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &mo 11     &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        OGSofle-layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        OGSofle-layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
